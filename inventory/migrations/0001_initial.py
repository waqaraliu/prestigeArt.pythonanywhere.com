# Generated by Django 3.2 on 2024-08-15 05:33

import cloudinary.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max_length=100', max_length=100, unique=True, verbose_name='Brand name')),
                ('slug', models.SlugField(help_text='format: required, max_length=150', max_length=150, unique=True, verbose_name='Brand Slug')),
                ('description', models.TextField(help_text='format: required, max_length=500', max_length=500, verbose_name='Brand description')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max_length=100', max_length=100, unique=True, verbose_name='Category name')),
                ('slug', models.SlugField(help_text='format: required, max_length=150', max_length=150, unique=True, verbose_name='Category Slug')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max_length=100', max_length=150, unique=True, verbose_name='Product name')),
                ('slug', models.SlugField(help_text='format: required, max_length=150', max_length=150, unique=True, verbose_name='Product Slug')),
                ('description', models.TextField(help_text='format: required, max_length=500', max_length=500, verbose_name='Product description')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('brand', models.ForeignKey(help_text='format: required, max_length=100', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='inventory.brand', verbose_name='Brand')),
                ('category', models.ForeignKey(help_text='format: required, max_length=100', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='inventory.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Product attribute',
                'verbose_name_plural': 'Product attributes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.CharField(max_length=255)),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_attribute', to='inventory.productattribute')),
            ],
            options={
                'verbose_name': 'Product attribute value',
                'verbose_name_plural': 'Product attribute values',
                'ordering': ['attribute_value'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributevalues', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributevalues', to='inventory.productattributevalue')),
            ],
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(help_text='format: required, max_length=50', max_length=50, unique=True, verbose_name='Stock Keeping Unit')),
                ('upc', models.CharField(help_text='format: required, max_length=12', max_length=12, unique=True, verbose_name='Universal Product Code')),
                ('retail_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('store_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('weight', models.FloatField(verbose_name='Product weight')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('attribute_values', models.ManyToManyField(related_name='product_attribute_values', through='inventory.ProductAttributeValues', to='inventory.ProductAttributeValue')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='inventory.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product inventory',
                'verbose_name_plural': 'Product inventories',
                'ordering': ['sku'],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='format: required, max_length=100', max_length=100, null=True, unique=True, verbose_name='Product type name')),
                ('slug', models.SlugField(blank=True, help_text='format: required, max_length=150', max_length=150, null=True, unique=True, verbose_name='Product type Slug')),
                ('description', models.TextField(help_text='format: required, max_length=500', max_length=500, verbose_name='Product type description')),
            ],
            options={
                'verbose_name': 'Product type',
                'verbose_name_plural': 'Product types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required, max_length=100', max_length=100, unique=True, verbose_name='Tag name')),
                ('slug', models.SlugField(help_text='format: required, max_length=150', max_length=150, unique=True, verbose_name='Tag Slug')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('units_variable', models.IntegerField(default=0, verbose_name='Units variable')),
                ('units', models.IntegerField(default=0, verbose_name='Units current')),
                ('units_sold', models.IntegerField(default=0, verbose_name='Units sold')),
                ('product_inventory', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock', to='inventory.productinventory')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stocks',
                'ordering': ['product_inventory'],
            },
        ),
        migrations.CreateModel(
            name='ProductTypeAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productattribute', to='inventory.productattribute')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='producttype', to='inventory.producttype')),
            ],
            options={
                'unique_together': {('product_attribute', 'product_type')},
            },
        ),
        migrations.AddField(
            model_name='producttype',
            name='product_type_attributes',
            field=models.ManyToManyField(related_name='product_type_attributes', through='inventory.ProductTypeAttribute', to='inventory.ProductAttribute'),
        ),
        migrations.AddField(
            model_name='productinventory',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory', to='inventory.producttype', verbose_name='Product type'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='product_image')),
                ('alt_text', models.CharField(blank=True, help_text='format: required, max_length=300', max_length=300, null=True, verbose_name='Alt text')),
                ('default_image', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('product', models.ForeignKey(help_text='format: required, max_length=100', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='inventory.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product image',
                'verbose_name_plural': 'Product images',
                'ordering': ['product'],
            },
        ),
        migrations.AddField(
            model_name='productattributevalues',
            name='productinventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productattributevalues', to='inventory.productinventory'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(help_text='format: required, max_length=100', related_name='products', to='inventory.Tag', verbose_name='Tags'),
        ),
        migrations.AlterUniqueTogether(
            name='productattributevalues',
            unique_together={('attributevalues', 'productinventory')},
        ),
    ]
